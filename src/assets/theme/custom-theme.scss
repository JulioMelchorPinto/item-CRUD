// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import "~@angular/material/theming";
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$item-crud-primary: mat-palette($mat-green);
$item-crud-accent: mat-palette($mat-amber, A200, A100, A400);
// The warn palette is optional (defaults to red).
$item-crud-warn: mat-palette($mat-red);
// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$item-light-theme: mat-light-theme(
  (
    color: (
      primary: $item-crud-primary,
      accent: $item-crud-accent,
      warn: $item-crud-warn,
    ),
  )
);

/* This is where you create your custom variable map
Make sure that the variable name you chose is one that does not exist in
the $theme map. In the accept answer, it uses $background but this one is
already taken. By using for example, 'background-of-main' you are sure
that there is no collision */
// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($item-light-theme);

$item-dark-theme: mat-dark-theme(
  (
    color: (
      primary: $item-crud-primary,
      accent: $item-crud-accent,
      warn: $item-crud-warn,
    ),
  )
);
.darkMode {
  @include angular-material-color($item-dark-theme);
}
